          \r\n{/* Imóveis em Destaque */}
          <div className="bg-white rounded-xl shadow-card p-6">
            <div className="flex items-center justify-between mb-4">
              <h2 className="text-lg font-semibold">Imóveis em Destaque</h2>
              {featuredForm.id && (
                <Button variant="outline" size="sm" onClick={resetFeaturedForm}>Novo</Button>
              )}
            </div>

            <div className="flex flex-col gap-6">
              {/* Lista de destaques */}
              <div className="order-2 grid gap-3">
                {featured.map((f, idx) => (
                  <div key={f.id} className="flex items-center gap-3 border border-border rounded-md p-3">
                    <img src={f.image_url} alt={f.title} className="w-16 h-16 object-cover rounded" />
                    <div className="flex-1">
                      <div className="font-semibold flex items-center gap-2">{f.title} {f.is_new ? <span className="text-xs px-2 py-0.5 rounded bg-secondary text-secondary-foreground">Novo</span> : null} <span className={`text-xs px-2 py-0.5 rounded ${f.is_published ? 'bg-success text-success-foreground' : 'bg-muted text-text-secondary'}`}>{f.is_published ? 'Publicado' : 'Rascunho'}</span></div>
                      <div className="text-xs text-text-secondary">{f.neighborhood}  •  {f.bedrooms} q  •  {f.bathrooms} b  •  {f.area}</div>
                    </div>
                    <div className="text-sm font-semibold text-primary mr-2 min-w-[110px] text-right">{f.price}</div>
                    <div className="flex items-center gap-2">
                      <Button size="xs" variant="outline" onClick={() => setFeaturedForm({
                        id: f.id, image_id: f.image_id, title: f.title, neighborhood: f.neighborhood || '', price: f.price,
                        bedrooms: f.bedrooms || 0, bathrooms: f.bathrooms || 0, area: f.area || '', type: f.type || '', features: f.features || [], price_range: f.price_range || '', is_new: !!f.is_new, is_published: !!f.is_published
                      })}>Editar</Button>
                      <Button size="xs" variant={f.is_published ? 'warning' : 'success'} onClick={() => publishToggleFeatured(f.id)}>{f.is_published ? 'Despublicar' : 'Publicar'}</Button>
                      <Button size="xs" variant="danger" onClick={() => removeFeatured(f.id)}>Excluir</Button>
                      <Button size="xs" variant="outline" onClick={() => moveFeatured(idx, -1)}>?</Button>
                      <Button size="xs" variant="outline" onClick={() => moveFeatured(idx, 1)}>?</Button>
                    </div>
                  </div>
                ))}
                {featured.length === 0 && (
                  <div className="text-sm text-text-secondary">Nenhum destaque cadastrado.</div>
                )}
              </div>

              {/* Formulário de destaque */}
              <div className="order-1">
                <div className="bg-white rounded-xl shadow-card p-4 sticky top-24">
                  <h3 className="text-base font-semibold mb-3">{featuredForm.id ? 'Editar Destaque' : 'Novo Destaque'}</h3>

                  <div className="grid grid-cols-1 gap-3">
                    <div>
                      <label className="text-sm font-medium">Imagem</label>
                      <select className="mt-1 w-full border border-border rounded-md h-10 px-2" value={featuredForm.image_id}
                        onChange={(e) => setFeaturedForm({ ...featuredForm, image_id: parseInt((e.target as any).value || '0', 10) })}>
                        <option value={0}>Selecione uma imagem…</option>
                        {existing.map((img) => (
                          <option key={img.id} value={img.id}>{img.filename}</option>
                        ))}
                      </select>
                    </div>
                    <Input label="Título" value={featuredForm.title} onChange={(e: any) => setFeaturedForm({ ...featuredForm, title: e.target.value })} required />
                    <Input label="Setor/Bairro" value={featuredForm.neighborhood} onChange={(e: any) => setFeaturedForm({ ...featuredForm, neighborhood: e.target.value })} />
                    <Input label="Valor" value={featuredForm.price} onChange={(e: any) => setFeaturedForm({ ...featuredForm, price: e.target.value })} required />
                    <div className="grid grid-cols-3 gap-2">
                      <Input type="number" label="Quartos" value={featuredForm.bedrooms} onChange={(e: any) => setFeaturedForm({ ...featuredForm, bedrooms: parseInt(e.target.value || '0', 10) })} />
                      <Input type="number" label="Banheiros" value={featuredForm.bathrooms} onChange={(e: any) => setFeaturedForm({ ...featuredForm, bathrooms: parseInt(e.target.value || '0', 10) })} />
                      <Input label="Área (m²)" value={featuredForm.area} onChange={(e: any) => setFeaturedForm({ ...featuredForm, area: e.target.value })} />
                    </div>
                    <Input label="Tipo (casa, apto, cobertura...)" value={featuredForm.type} onChange={(e: any) => setFeaturedForm({ ...featuredForm, type: e.target.value })} />
                    <Input label="Faça de preço (ex.: 1200000-1800000)" value={featuredForm.price_range} onChange={(e: any) => setFeaturedForm({ ...featuredForm, price_range: e.target.value })} />
                    <Input label="Features (separe por vírgula)" value={featuredForm.features?.join(', ')} onChange={(e: any) => setFeaturedForm({ ...featuredForm, features: (e.target.value || '').split(',').map((s: string) => s.trim()).filter(Boolean) })} />
                    <div className="flex items-center gap-4">
                      <label className="flex items-center gap-2 text-sm"><input type="checkbox" checked={featuredForm.is_new} onChange={(e) => setFeaturedForm({ ...featuredForm, is_new: (e.target as any).checked })} /> Novo</label>
                      <label className="flex items-center gap-2 text-sm"><input type="checkbox" checked={featuredForm.is_published} onChange={(e) => setFeaturedForm({ ...featuredForm, is_published: (e.target as any).checked })} /> Publicado</label>
                    </div>
                  </div>
                  <div className="mt-4 flex items-center gap-2">
                    <Button onClick={saveFeatured} variant="success">{featuredForm.id ? 'Salvar alterações' : 'Publicar Destaque'}</Button>
                    {featuredForm.id && <Button variant="outline" onClick={resetFeaturedForm}>Cancelar</Button>}
                  </div>
                </div>
              </div>
            </div>
          </div>
