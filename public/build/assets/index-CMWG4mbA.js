let o={};const c=n=>{if(!n||!n.query&&!n.mergeQuery)return"";const r=n.query??n.mergeQuery,s=n.mergeQuery!==void 0,f=e=>e===!0?"1":e===!1?"0":e.toString(),t=new URLSearchParams(s&&typeof window<"u"?window.location.search:"");for(const e in r){if(r[e]===void 0||r[e]===null){t.delete(e);continue}if(Array.isArray(r[e]))t.has(`${e}[]`)&&t.delete(`${e}[]`),r[e].forEach(i=>{t.append(`${e}[]`,i.toString())});else if(typeof r[e]=="object"){t.forEach((i,a)=>{a.startsWith(`${e}[`)&&t.delete(a)});for(const i in r[e])typeof r[e][i]>"u"||["string","number","boolean"].includes(typeof r[e][i])&&t.set(`${e}[${i}]`,f(r[e][i]))}else t.set(e,f(r[e]))}const u=t.toString();return u.length>0?`?${u}`:""},l=n=>{const r={...n??{}};for(const s in o)r[s]===void 0&&o[s]!==void 0&&(r[s]=o[s]);return r};export{l as a,c as q};
