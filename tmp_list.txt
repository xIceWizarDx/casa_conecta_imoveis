            <div className="flex flex-col gap-6">
              {/* Lista de destaques */}
              <div className="order-2 grid gap-3">
                {featured.map((f, idx) => (
                  <div key={f.id} className="flex items-center gap-3 border border-border rounded-md p-3">
                    <img src={f.image_url} alt={f.title} className="w-16 h-16 object-cover rounded" />
                    <div className="flex-1">
                      <div className="font-semibold flex items-center gap-2">{f.title} {f.is_new ? <span className="text-xs px-2 py-0.5 rounded bg-secondary text-secondary-foreground">Novo</span> : null} <span className={`text-xs px-2 py-0.5 rounded ${f.is_published ? 'bg-success text-success-foreground' : 'bg-muted text-text-secondary'}`}>{f.is_published ? 'Publicado' : 'Rascunho'}</span></div>
                      <div className="text-xs text-text-secondary">{f.neighborhood}  •  {f.bedrooms} q  •  {f.bathrooms} b  •  {f.area}</div>
                    </div>
                    <div className="text-sm font-semibold text-primary mr-2 min-w-[110px] text-right">{f.price}</div>
                    <div className="flex items-center gap-2">
                      <Button size="xs" variant="outline" onClick={() => setFeaturedForm({
                        id: f.id, image_id: f.image_id, title: f.title, neighborhood: f.neighborhood || '', price: f.price,
                        bedrooms: f.bedrooms || 0, bathrooms: f.bathrooms || 0, area: f.area || '', type: f.type || '', features: f.features || [], price_range: f.price_range || '', is_new: !!f.is_new, is_published: !!f.is_published
                      })}>Editar</Button>
                      <Button size="xs" variant={f.is_published ? 'warning' : 'success'} onClick={() => publishToggleFeatured(f.id)}>{f.is_published ? 'Despublicar' : 'Publicar'}</Button>
                      <Button size="xs" variant="danger" onClick={() => removeFeatured(f.id)}>Excluir</Button>
                      <Button size="xs" variant="outline" onClick={() => moveFeatured(idx, -1)}>?</Button>
                      <Button size="xs" variant="outline" onClick={() => moveFeatured(idx, 1)}>?</Button>
                    </div>
                  </div>
                ))}
                {featured.length === 0 && (
                  <div className="text-sm text-text-secondary">Nenhum destaque cadastrado.</div>
